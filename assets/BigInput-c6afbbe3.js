import{d as n,i as l,_ as u,o as s,b as o,a as i,t as a,j as d,v as m,m as p,h as f,e as c}from"./index-b7a6dce0.js";const h=n({name:"BigInput",props:{label:String,val:Object,customError:{type:String,default:""},forceCustomError:Boolean},data(){var e;return{value:null,fieldName:(e=this.label)==null?void 0:e.replace(/[^a-zA-Z]/g,""),isError:!1,error:"",useCustomError:!1}},emits:{change:null,validation:null},methods:{async onInput(e){const r=e.target;this.$emit("change",r.value),await l(),r.checkValidity()?(this.$emit("validation",!0),this.error="",this.isError=!1):(this.$emit("validation",!1),this.isError=!0,r.validity.patternMismatch?(this.error="",this.useCustomError=!0):this.error=r.validationMessage.toLocaleLowerCase()??"")}},computed:{errorMsg(){return this.forceCustomError?this.customError?this.customError:this.error:this.useCustomError?this.customError:this.error}}});const v={class:"big-input-container"},g=["for"],E=["name"],_={key:0,class:"field-error font-xs"};function y(e,r,b,B,C,I){return s(),o("div",v,[i("label",{class:"field-label font-s",for:e.fieldName},a(e.label),9,g),d(i("input",p({class:"field-input font-s",name:e.fieldName},e.val,{"onUpdate:modelValue":r[0]||(r[0]=t=>e.value=t),onInput:r[1]||(r[1]=f((...t)=>e.onInput&&e.onInput(...t),["prevent"]))}),null,16,E),[[m,e.value]]),e.isError?(s(),o("span",_,a(e.errorMsg),1)):c("",!0)])}const M=u(h,[["render",y]]);export{M as B};
