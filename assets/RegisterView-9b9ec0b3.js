import{B as l}from"./BigInput-7f5b356f.js";import{d,u as n,_ as m,r as u,o as p,b as h,a as t,g as o,h as f}from"./index-3f31a3d8.js";const c=d({name:"RegisterView",components:{BigInput:l},data(){return{username:{value:"",valid:!1},password:{value:"",valid:!1},passwordConfirm:{value:"",valid:!1},confirmError:""}},methods:{registerSubmit(a){const e=new FormData(a.target);e.append("themeId","-1"),this.$axios.post("/user/register",e).then(s=>{n.set(s.data.userData),n.setStorage(s.data.token,s.data.userData.userId)})},onUsernameChange(a){this.username.value=a},onPwChange(a){this.password.value=a,this.password.value!=this.passwordConfirm.value?this.confirmError="passwords must match":this.confirmError=""},onPwConfirmChange(a){this.passwordConfirm.value=a,this.password.value!=this.passwordConfirm.value?this.confirmError="passwords must match":this.confirmError=""},onUsernameVal(a){this.username.valid=a},onPwVal(a){this.password.valid=a},onPwConfirmVal(a){this.passwordConfirm.valid=a}},computed:{isValid(){return this.username.valid&&this.password.valid&&this.passwordConfirm.valid&&this.password.value==this.passwordConfirm.value}}}),w={class:"auth-form-container"},g=t("span",{class:"font-m"},"Register",-1),v=["disabled"];function C(a,e,s,V,b,E){const r=u("BigInput");return p(),h("div",w,[g,t("form",{class:"auth-form list-card",novalidate:"",onSubmit:e[0]||(e[0]=f((...i)=>a.registerSubmit&&a.registerSubmit(...i),["prevent"])),ref:"registerForm"},[o(r,{label:"username",val:{required:!0,minlength:3,maxlength:30,type:"text"},onChange:a.onUsernameChange,onValidation:a.onUsernameVal},null,8,["onChange","onValidation"]),o(r,{label:"password",val:{required:!0,minlength:4,maxlength:50,type:"password",pattern:"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^a-zA-Z\\d]).{4,50}$"},customError:"password must be at least 4 characters long and include at least one digit, lowercase letter, uppercase letter and special character",onChange:a.onPwChange,onValidation:a.onPwVal},null,8,["val","onChange","onValidation"]),o(r,{label:"confirm password",val:{required:!0,type:"password"},customError:a.confirmError,forceCustomError:!0,onChange:a.onPwConfirmChange,onValidation:a.onPwConfirmVal,ref:"pwConfirmBigInput"},null,8,["customError","onChange","onValidation"]),t("button",{class:"auth-submit",type:"submit",disabled:!a.isValid},"sign up",8,v)],544)])}const I=m(c,[["render",C]]);export{I as default};
